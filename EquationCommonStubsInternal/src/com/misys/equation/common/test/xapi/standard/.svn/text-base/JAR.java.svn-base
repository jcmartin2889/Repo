/*
 * This sample code is provided by Misys for illustrative purposes only.
 * 
 * These examples have not been thoroughly tested under all conditions.
 * 
 * Misys, therefore, cannot guarantee or imply reliability, serviceability, or function of these programs.
 * 
 * All programs contained herein are provided to you "AS IS" without any warranties of any kind. The implied warranties of
 * non-infringement, merchantability and fitness for a particular purpose are expressly disclaimed.
 */
package com.misys.equation.common.test.xapi.standard;

import com.misys.equation.common.access.EquationStandardSession;
import com.misys.equation.common.access.EquationStandardTransaction;
import com.misys.equation.common.access.EquationUnit;
import com.misys.equation.common.access.EquationUser;
import com.misys.equation.common.test.TestEnvironment;

// *************************************************************************************************
/**
 * 
 * 
 */
// *************************************************************************************************
public class JAR
{
	// This attribute is used to store cvs version information.
	public static final String _revision = "$Id$";
	protected static EquationStandardSession session;
	protected static EquationUnit unit;
	protected static EquationUser user;
	// *********************************************************************************************
	/**
	 * 
	 */
	// *********************************************************************************************
	private JAR()
	{
		try
		{
			unit = TestEnvironment.getTestEnvironment().getEquationUnit();
			user = TestEnvironment.getTestEnvironment().getEquationUser();
			session = user.getSession();
		}
		catch (Exception e)
		{
			System.out.println(e);
			e.printStackTrace();
		}
	}
	public static void main(String[] inputParameters)
	{
		JAR test = new JAR();
		test.test();
	}
	// *********************************************************************************************
	/**
	 * 
	 */
	// *********************************************************************************************
	public void test()
	{
		// Have a bash...
		try
		{
			EquationStandardTransaction transaction = new EquationStandardTransaction("C54LRRJAR", session);

			// Set the transaction type
			transaction.setMode("D");

			transaction.setFieldValue("GZAB", "0000"); // Joint account branch (4A)
			transaction.setFieldValue("GZAN", "000001"); // Joint account basic number (6A)
			transaction.setFieldValue("GZAS", "001"); // Joint account suffix (3A)
			transaction.setFieldValue("GZPCUS", "ATLANT"); // Primary customer mnemonic (6A)
			transaction.setFieldValue("GZPCLC", ""); // Primary customer location (3A)
			transaction.setFieldValue("GZSCUS", "ACCS"); // Secondary customer mnemonic (6A)
			transaction.setFieldValue("GZSCLC", "DTA"); // Secondary customer location (3A)
			transaction.setFieldValue("GZREL", "DIV"); // Relationship code (3A)
			transaction.setFieldValue("GZDUPS", "N"); // Duplicate statements required? (1A)

			transaction.setFieldValue("GZCUSH", "ACCS"); // Secondary customer mnemonic (6A)
			transaction.setFieldValue("GZCLCH", "DTA"); // Secondary customer location (3A)
			transaction.setFieldValue("GZRELH", "DIV"); // Secondary customer mnemonic (6A)
			transaction.setFieldValue("GZDUPH", "N"); // Secondary customer location (3A)

			// Retrieve
			session.retrieveEquationTransaction(transaction);

			// Apply the transaction
			// session.addEquationTransaction(transaction);
			// session.applyTransactions();
			// session.commitTransactions();

			//
			System.out.println(transaction);
			System.out.println("finished!");

		}
		catch (Exception e)
		{
			System.out.println(e.toString());
			// Rollback any transactions for the unit
		}
	}
}
