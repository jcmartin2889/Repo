/*
 * This sample code is provided by Misys for illustrative purposes only.
 * 
 * These examples have not been thoroughly tested under all conditions.
 * 
 * Misys, therefore, cannot guarantee or imply reliability, serviceability, or function of these programs.
 * 
 * All programs contained herein are provided to you "AS IS" without any warranties of any kind. The implied warranties of
 * non-infringement, merchantability and fitness for a particular purpose are expressly disclaimed.
 */
package com.misys.equation.common.test.xapi.enhanced;

import java.util.Iterator;

import com.misys.equation.common.internal.eapi.core.EQEnquiry;
import com.misys.equation.common.internal.eapi.core.EQField;
import com.misys.equation.common.internal.eapi.core.EQSession;
import com.misys.equation.common.internal.eapi.core.EQTransaction;
import com.misys.equation.common.test.TestEnvironment;

public class AMC
{
	// This attribute is used to store cvs version information.
	public static final String _revision = "$Id$";
	EQSession session;
	EQTransaction yieldCurve;
	public AMC()
	{
		try
		{
			session = TestEnvironment.getTestEnvironment().getEnhancedAPISession();
		}
		catch (Exception e)
		{
			System.out.println(e);
			e.printStackTrace();
		}
	}
	public static void main(String[] args)
	{
		try
		{
			AMC test = new AMC();
			test.test();
		}
		catch (Exception e)
		{
			System.out.println(e);
			e.printStackTrace();
		}
	}
	public void test()
	{
		try
		{
			// Got this far so we may as well have a bash at a couple of
			// transactions...
			yieldCurve = (EQTransaction) session.createEQObject("AMC");
			yieldCurve.setAuditUserID("whoever");
			// Set the fields
			yieldCurve.setFieldValue("ZLCCY", "GBP");
			yieldCurve.setFieldValue("ZLCRV", "CIW");
			yieldCurve.setFieldValue("ZLSQN", "00");
			yieldCurve.setFieldValue("ZLDES", "MAZ TEST");
			yieldCurve.setFieldValue("ZLCRT", "Z");
			yieldCurve.setFieldValue("ZLFRQ", "A");
			yieldCurve.setFieldValue("ZLIPM", "S");
			// retrieve default values
			yieldCurve.add(session, EQTransaction.ACTION_VALIDATE);
			// Loop through the fields and print their values, also clear
			// messages for non key fields
			Iterator<EQField> iterFields = yieldCurve.getFields().values().iterator();
			while (iterFields.hasNext())
			{
				EQField accountField = iterFields.next();
				// Write out the fields values
				if (!accountField.getValue().trim().equals(""))
				{
					System.out.println(accountField.getDefinition().getFieldName() + ":" + accountField.getValue());
				}
				// Only interested in error messages for key fields
				if (accountField.getDefinition().isKeyField() && !(accountField.getMessages() == null))
				{
					System.out.println(accountField.getMessages());
				}
			}
			// Now set a record
			yieldCurve.getList().setFieldValue(0, "ZLDAY", "31");
			yieldCurve.getList().setFieldValue(0, "ZLRAT", "5");
			// And another
			yieldCurve.getList().setFieldValue(1, "ZLMON", "01");
			yieldCurve.getList().setFieldValue(1, "ZLRAT", "6");
			// Bang them in
			yieldCurve.setAutoOverride(true);
			yieldCurve.add(session, EQTransaction.ACTION_UPDATE);
			System.out.println(yieldCurve.getMessages());
			System.out.println(yieldCurve.getOverrides());
			// commit the bad boys
			session.commit();
			// ******************************************************************************************
			// We've now added one, now lets try and maintain it!
			// ******************************************************************************************
			// Got this far so we may as well have a bash at a couple of
			// transactions...
			yieldCurve = (EQTransaction) session.createEQObject("AMC");
			yieldCurve.setAuditUserID("whoever");
			// Set the fields
			yieldCurve.setFieldValue("ZLCCY", "GBP");
			yieldCurve.setFieldValue("ZLCRV", "CIW");
			yieldCurve.setFieldValue("ZLSQN", "00");
			// Remember remember to specify we are adding too!
			yieldCurve.setFieldValue("ZLADD", "N");
			yieldCurve.setMaintenanceMode(EQTransaction.MAINTENANCE_MODE_MAINTAIN);
			yieldCurve.maintain(session, EQEnquiry.ACTION_RETRIEVE);
			// Now set a record
			System.out.println(yieldCurve.getStatusString());
			System.out.println(yieldCurve.getMessages());
			System.out.println(yieldCurve.getOverrides());
			yieldCurve.getList().setFieldValue(1, "ZLMON", "02");
			yieldCurve.getList().setFieldValue(1, "ZLRAT", "7");
			// Bang them in
			yieldCurve.setAutoOverride(true);
			yieldCurve.maintain(session, EQTransaction.ACTION_UPDATE);
			System.out.println(yieldCurve.getMessages());
			System.out.println(yieldCurve.getOverrides());
			// commit the bad boys
			session.commit();
			// log out
			session.logOff();
		}
		catch (Exception e)
		{
			System.out.println(e);
			e.printStackTrace();
		}
	}
}
