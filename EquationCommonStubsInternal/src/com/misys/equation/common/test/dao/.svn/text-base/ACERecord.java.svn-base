package com.misys.equation.common.test.dao;

import com.misys.equation.common.dao.IACERecordDao;
import com.misys.equation.common.dao.beans.ACERecordDataModel;
import com.misys.equation.common.dao.beans.AbsRecord;
import com.misys.equation.common.test.EquationTestCaseDao;

/**
 * This is a unit-test which will test ACEIRecord services.
 * 
 * @author deroset
 * 
 */
public class ACERecord extends EquationTestCaseDao
{

	// This attribute is used to store cvs version information.
	public static final String _revision = "$Id$";
	public ACERecord()
	{

	}

	/**
	 * 
	 * This method is going to retrieve the Dao from the bean repository and set it as local attribute.
	 */
	@Override
	protected void setDao()
	{
		dao = daoFactory.getACEDao(session, dataModel);
	}

	/**
	 * This method will test if the record has been already inserted in the dataBase.
	 */
	@Override
	public void isRecord(boolean assertValue)
	{
		boolean result;

		result = checkIfThisRecordIsInTheDB();
		if (assertValue)
		{
			assertTrue(result);
		}
		else
		{
			assertFalse(result);
		}

	}

	/**
	 * This method is going to check the getRecord dao's service.<br>
	 * The obtained result should be the same than the preset in the dao data-model.
	 * 
	 */
	@Override
	public ACERecordDataModel getRecord()
	{

		ACERecordDataModel ACERecord = null;
		ACERecord = ((IACERecordDao) dao).getACERecord();
		assertDataModel(ACERecord);
		return ACERecord;
	}

	/**
	 * This method will test the update dao's service.
	 */
	@Override
	public void updateRecord()
	{

		ACERecordDataModel ACERecord = null;

		this.getMyModel().setDescription("Program title Updated");
		dao.updateRecord();
		ACERecord = getRecord();
		assertEquals(this.getMyModel().getDescription(), ACERecord.getDescription());
	}

	@Override
	protected void assertDataModel(AbsRecord dataModel)
	{

		ACERecordDataModel record = (ACERecordDataModel) dataModel;

		assertEquals(getMyModel().getWidgetName(), record.getWidgetName());
		assertEquals(getMyModel().getDescription(), record.getDescription());
		assertEquals(getMyModel().getMisysSupplied(), record.getMisysSupplied());
	}

	@Override
	protected boolean checkIfThisRecordIsInTheDB()
	{
		boolean result;
		result = ((IACERecordDao) dao).checkIfThisACERecordIsInTheDB();
		return result;
	}

	@Override
	protected void setDataModel()
	{
		ACERecordDataModel record = new ACERecordDataModel("ACE");
		record.setMisysSupplied("T");

		record.setLibrary(kFilLibName);
		this.dataModel = record;

	}

	/**
	 * This method is going to return a casted data model.
	 * 
	 * @return a casted data model
	 */
	public ACERecordDataModel getMyModel()
	{

		ACERecordDataModel ACERecordDataModel = null;

		if (dataModel instanceof ACERecordDataModel)
		{

			ACERecordDataModel = (ACERecordDataModel) dataModel;

		}
		else
		{
			throw new IllegalArgumentException("The set data-model does not correspond to the expected one.");
		}

		return ACERecordDataModel;
	}
}
