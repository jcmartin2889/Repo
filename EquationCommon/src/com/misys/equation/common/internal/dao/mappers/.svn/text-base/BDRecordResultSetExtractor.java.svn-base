package com.misys.equation.common.internal.dao.mappers;

import java.sql.ResultSet;
import java.sql.SQLException;

import org.springframework.jdbc.core.ResultSetExtractor;

import com.misys.equation.common.dao.beans.BDRecordDataModel;

/**
 * This is a helper class used by Sp framework to populate the data model.<br>
 * This class will extract data from the <code>ResultSet</code> and create a data model.
 * 
 */

public class BDRecordResultSetExtractor implements ResultSetExtractor
{

	// This attribute is used to store cvs version information.
	public static final String _revision = "$Id$";
	/**
	 * This class will extract data from the <code>ResultSet</code> and create a data model.
	 * 
	 * @param the
	 *            passed <code>ResultSet</code> which contains the data.
	 * 
	 * @return a <code>BDRecordDataModel</code> data model.
	 */
	public Object extractData(ResultSet resultSet) throws SQLException
	{
		BDRecordDataModel record = new BDRecordDataModel();

		record.setItemName(resultSet.getString(1).trim());
		record.setEquationFile(resultSet.getString(2).trim());
		record.setItemDescription(resultSet.getString(3).trim());
		record.setDataTypeCode(resultSet.getString(4).trim());
		record.setScreenFieldLength(resultSet.getInt(5));
		record.setMandatory(resultSet.getString(6).trim());
		record.setUserValidationProgram(resultSet.getString(7).trim());
		record.setUniqueCustomerIdentifier(resultSet.getString(8).trim());
		record.setEditCode(resultSet.getString(9).trim());
		record.setInternalItemNumber(resultSet.getInt(10));
		record.setEndPosition(resultSet.getInt(11));
		record.setStartPosition(resultSet.getInt(12));
		record.setFieldType(resultSet.getString(13).trim());
		record.setFieldLength(resultSet.getInt(14));
		record.setSelectionCode(resultSet.getString(15).trim());
		record.setCurrencyOfAmount(resultSet.getString(16).trim());
		record.setSignOfAmount(resultSet.getString(17).trim());
		record.setDisplayOnStatementEnqs(resultSet.getString(18).trim());
		record.setValidateESFLimitAmount(resultSet.getString(19).trim());
		return record;
	}
}
