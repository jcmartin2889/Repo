package com.misys.equation.common.datastructure;

import com.misys.equation.common.access.EquationDataStructure;
import com.misys.equation.common.utilities.Toolbox;

public class EqDS_DSSYS3 extends EquationDataStructure
{

	// This attribute is used to store cvs version information.
	public static final String _revision = "$Id: EqDS_DSSYS3.java 13462 2012-06-06 08:19:07Z bterrado $";
	private static final long serialVersionUID = 1L;

	public final static String FLR = "$FLR";
	public final static String FXA = "$FXA";
	public final static String CCA = "$CCA";
	public final static String CCS = "$CCS";
	public final static String CSWT = "$CSWT";
	public final static String BDRP = "$BDRP";
	public final static String SSBS = "$SSBS";
	public final static String SIBS = "$SIBS";
	public final static String CSMAX = "$CSMAX";
	public final static String CSJOB1 = "$CSJOB1";
	public final static String FFML = "$FFML";
	public final static String RLPD = "$RLPD";
	public final static String RLVD = "$RLVD";
	public final static String SPOLI = "$SPOLI";
	public final static String SPPIA = "$SPPIA";
	public final static String PLCAT = "$PLCAT";
	public final static String EQ4DU = "$EQ4DU";
	public final static String IASAC = "$IASAC";
	public final static String IASTD = "$IASTD";
	public final static String IASURD = "$IASURD";
	public final static String BICI = "$BICI";
	public final static String FRSCF = "$FRSCF";
	public final static String FCNSM = "$FCNSM";
	public final static String FCSSB = "$FCSSB";
	public final static String FCNSE = "$FCNSE";
	public final static String FCSUB = "$FCSUB";
	public final static String FCJBQ = "$FCJBQ";
	public final static String FCJBD = "$FCJBD";
	public final static String FCMCN = "$FCMCN";
	public final static String FCLLB = "$FCLLB";
	public final static String FCLOG = "$FCLOG";
	public final static String FCCHK = "$FCCHK";
	public final static String FCMAT = "$FCMAT";
	public final static String FCDUP = "$FCDUP";
	public final static String FCBLK = "$FCBLK";
	public final static String FCRUL = "$FCRUL";
	public final static String FCNAL = "$FCNAL";
	public final static String FCNAL1 = "$FCNAL1";
	public final static String FCNAL2 = "$FCNAL2";
	public final static String FBLKN = "$FBLKN";
	public final static String FRULN = "$FRULN";
	public final static String MBEXE = "$MBEXE";
	public final static String MBJOB = "$MBJOB";
	public final static String MBPL1 = "$MBPL1";
	public final static String MBPL2 = "$MBPL2";
	public final static String MBPL3 = "$MBPL3";
	public final static String MBPL4 = "$MBPL4";
	public final static String MBPL5 = "$MBPL5";
	public final static String MBEXL = "$MBEXL";
	public final static String MBMXL = "$MBMXL";
	public final static String GIRP = "$GIRP";
	public final static String CAJD = "$CAJD";
	public final static String EATV = "$EATV";
	public final static String SPVC = "$SPVC";
	public final static String RELF = "$RELF";
	public final static String PANIS = "$PANIS";
	public final static String SIPA = "$SIPA";
	public final static String ALIAC = "$ALIAC";
	public final static String ALIFD = "$ALIFD";
	public final static String ALPFL = "$ALPFL";
	public final static String ALIAB = "$ALIAB";
	public final static String ALAUP = "$ALAUP";
	public final static String ALWTP = "$ALWTP";
	public final static String ALCOF = "$ALCOF";
	public final static String ALFRQ = "$ALFRQ";
	public final static String ALBSD = "$ALBSD";
	public final static String NIBSD = "$NIBSD";
	public final static String OTRR = "$OTRR";
	public final static String MBSID = "$MBSID";
	public final static String MBUSR = "$MBUSR";
	public final static String MBPWD = "$MBPWD";
	public final static String MBDIR = "$MBDIR";
	public final static String ALIMPF = "$ALIMPF";
	public final static String DDWR = "$DDWR";
	public final static String TIDBR = "$TIDBR";
	public final static String GPPJC = "$GPPJC";
	public final static String GPUJC = "$GPUJC";
	public final static String GPAJC = "$GPAJC";
	public final static String GPMPB = "$GPMPB";
	public final static String GPMUB = "$GPMUB";
	public final static String GPPBT = "$GPPBT";
	public final static String DDSSC = "$DDSSC";
	public final static String RCAN = "$RCAN";
	public final static String WFCAPI = "$WFCAPI";
	public final static String WFCAPS = "$WFCAPS";
	public final static String WFCAPP = "$WFCAPP";
	public final static String WFDDAE = "$WFDDAE";
	public final static String TIDPA = "$TIDPA";
	public final static String MCHRP = "$MCHRP";
	public final static String MCCHK = "$MCCHK";

	public final static String DUM1 = "$DUM1";
	public final static String DUM2 = "$DUM2";
	public final static String DUM3 = "$DUM3";
	public final static String DUM4 = "$DUM4";
	public final static String DUM5 = "$DUM5";
	public final static String DUM6 = "$DUM6";
	public final static String DUM7 = "$DUM7";
	public final static String DUM8 = "$DUM8";

	/**
	 * Constructor to create the DSSYS3 data structure
	 */
	public EqDS_DSSYS3()
	{
		super("DSSYS3", Toolbox.DEF_CCSID);

		createCharacterField(FLR, "Fault Log G0PF retention period", 1 - 1, 4);
		createCharacterField(DUM1, "DUM1", 5 - 1, 4);
		createCharacterField(FXA, "FX/MM asynchronous processing", 9 - 1, 1);
		createCharacterField(CCA, "Commitment control active", 10 - 1, 1);
		createCharacterField(CCS, "CC Scope by activation group flag", 11 - 1, 1);
		createCharacterField(DUM2, "DUM2", 12 - 1, 4);
		createZonedFieldAsChar(CSWT, "Cashier T/F data queue wait time", 16 - 1, 3, 0);
		createZonedFieldAsChar(BDRP, "Base/Differential Rate Retention Period", 19 - 1, 2, 0);
		createCharacterField(SSBS, "Suppress the SP109 if branch settlm", 21 - 1, 1);
		createCharacterField(SIBS, "Suppress branch settlm for same rgn", 22 - 1, 1);
		createCharacterField(CSMAX, "Max no. of records for each extract", 23 - 1, 7);
		createCharacterField(CSJOB1, "Job desc. for data extract jobs", 30 - 1, 10);
		createCharacterField(FFML, "Using FML API for Fircosoft WLC", 40 - 1, 1);
		createCharacterField(DUM3, "DUM3", 41 - 1, 5);
		createCharacterField(RLPD, "SC153 Processing date", 46 - 1, 1);
		createCharacterField(RLVD, "SC153 Value date", 47 - 1, 1);
		createCharacterField(DUM4, "DUM4", 48 - 1, 1);
		createCharacterField(SPOLI, "Split overdue lending interest", 49 - 1, 1);
		createCharacterField(SPPIA, "Split penalty interest accruals", 50 - 1, 1);
		createCharacterField(PLCAT, "Use P&L categories for penalty", 51 - 1, 1);
		createCharacterField(EQ4DU, "Development unit?", 52 - 1, 1);
		createCharacterField(IASAC, "IAS accounting", 53 - 1, 1);
		createZonedFieldAsChar(IASTD, "IAS take-on date", 54 - 1, 7, 0);
		createCharacterField(IASURD, "Use rollover dates for IAS", 61 - 1, 1);
		createCharacterField(BICI, "BICPlusIBAN directory", 62 - 1, 1);
		createCharacterField(FRSCF, "Run separate customer filter", 63 - 1, 1);
		createCharacterField(FCNSM, "Customer OFAC-Agent server host name", 64 - 1, 20);
		createCharacterField(FCSSB, "Customer OFAC-Agent server name", 84 - 1, 20);
		createZonedFieldAsChar(FCNSE, "Number of customer OFAC-Agent server", 104 - 1, 2, 0);
		createCharacterField(FCSUB, "Subsystem for cust OFAC-Agent server", 106 - 1, 10);
		createCharacterField(FCJBQ, "Job queue for cust OFAC-Agent server", 116 - 1, 10);
		createCharacterField(FCJBD, "Job desc. for cust OFAC-Agent server", 126 - 1, 10);
		createZonedFieldAsChar(FCMCN, "Max simultaneous customer connection", 136 - 1, 2, 0);
		createCharacterField(FCLLB, "Library containing customer log file", 138 - 1, 10);
		createCharacterField(FCLOG, "Name of customer log file", 148 - 1, 5);
		createCharacterField(FCCHK, "Customer checking severity", 153 - 1, 20);
		createCharacterField(FCMAT, "Customer matching method", 173 - 1, 20);
		createCharacterField(FCDUP, "Duplicates for customer checking", 193 - 1, 1);
		createCharacterField(FCBLK, "Customer blacklist file", 194 - 1, 10);
		createCharacterField(FCRUL, "Customer rules file", 204 - 1, 10);
		createCharacterField(FCNAL, "Customer NOALGO processing", 214 - 1, 20);
		createCharacterField(FCNAL1, "Customer NOALGO Line 1", 234 - 1, 20);
		createCharacterField(FCNAL2, "Customer NOALGO Line 2", 254 - 1, 20);
		createCharacterField(FBLKN, "Blacklist file name", 274 - 1, 10);
		createCharacterField(FRULN, "Rules file name", 284 - 1, 10);
		createCharacterField(MBEXE, "Daily extract enabled?", 294 - 1, 1);
		createCharacterField(MBJOB, "Job description", 295 - 1, 10);
		createCharacterField(MBPL1, "Signal file path - line 1", 305 - 1, 20);
		createCharacterField(MBPL2, "Signal file path - line 2", 325 - 1, 20);
		createCharacterField(MBPL3, "Signal file path - line 3", 345 - 1, 20);
		createCharacterField(MBPL4, "Signal file path - line 4", 365 - 1, 20);
		createCharacterField(MBPL5, "Signal file path - line 5", 385 - 1, 20);
		createCharacterField(MBEXL, "Extract library prefix", 405 - 1, 7);
		createZonedFieldAsChar(MBMXL, "Maximum extract library count", 412 - 1, 2, 0);
		createCharacterField(GIRP, "Global ITA reference prefix", 414 - 1, 3);
		createCharacterField(CAJD, "Command API job description", 417 - 1, 10);
		createCharacterField(EATV, "Enhanced Arabic Text Validation", 427 - 1, 1);
		createCharacterField(SPVC, "Account validation against SP101", 428 - 1, 1);
		createCharacterField(RELF, "Use Related Ref on MT202", 429 - 1, 1);
		createCharacterField(PANIS, "Post acc and NA int/pen separately?", 430 - 1, 1);
		createCharacterField(SIPA, "Split int & pen accruals?", 431 - 1, 1);
		createCharacterField(DUM5, "DUM5", 432 - 1, 2);
		createCharacterField(ALIAC, "Almonde IAS39 accounting requireed?", 434 - 1, 1);
		createCharacterField(ALIFD, "IFS Almonde directory", 435 - 1, 20);
		createCharacterField(ALPFL, "ALmonde postings file name", 455 - 1, 20);
		createCharacterField(ALIAB, "Almonde IAS39 branch", 475 - 1, 4);
		createCharacterField(ALAUP, "Automate IAS39 postings in EOD?", 479 - 1, 1);
		createZonedFieldAsChar(ALWTP, "Wait period fo Almonde EOD", 480 - 1, 3, 0);
		createZonedFieldAsChar(ALCOF, "IAS39 Cut-off time", 483 - 1, 4, 0);
		createCharacterField(ALFRQ, "IAS39 BSD frequency", 487 - 1, 3);
		createZonedFieldAsChar(ALBSD, "IAS39 Last balance sheet date", 490 - 1, 7, 0);
		createZonedFieldAsChar(NIBSD, "IAS39 Next balance sheet date", 497 - 1, 7, 0);
		createCharacterField(DUM6, "DUM6", 504 - 1, 1);
		createZonedFieldAsChar(OTRR, "Online transaction request retention", 505 - 1, 2, 0);
		createCharacterField(MBSID, "MBI Server IP Address", 507 - 1, 20);
		createCharacterField(MBUSR, "MBI User ID", 527 - 1, 20);
		createCharacterField(MBPWD, "MBI User Password", 547 - 1, 20);
		createCharacterField(MBDIR, "MBI Server Target Directory", 567 - 1, 20);
		createCharacterField(ALIMPF, "IAS39 Import Failed Flag", 587 - 1, 1);
		createCharacterField(DDWR, "Service branch for TI", 588 - 1, 1);
		createCharacterField(TIDBR, "GP propagator job control?", 589 - 1, 4);
		createCharacterField(GPPJC, "GP unit monitor job control?", 593 - 1, 1);
		createCharacterField(GPUJC, "GP applicator job control?", 594 - 1, 1);
		createCharacterField(GPAJC, "Maximum GP propagation backlog", 595 - 1, 1);
		createZonedFieldAsChar(GPMPB, "Maximum GP unit monitor backlog", 596 - 1, 6, 0);
		createZonedFieldAsChar(GPMUB, "GP propagation backlog timeout", 602 - 1, 6, 0);
		createZonedFieldAsChar(GPPBT, "DDS script consolidation", 608 - 1, 3, 0);
		createCharacterField(DDSSC, "Re-use closed account numbers", 611 - 1, 1);
		createCharacterField(DUM7, "DUM7", 612 - 1, 7);
		createCharacterField(RCAN, "GP Console Application", 619 - 1, 1);
		createCharacterField(WFCAPI, "GP Console Server", 620 - 1, 20);
		createCharacterField(WFCAPS, "GP Console Port", 640 - 1, 16);
		createCharacterField(WFCAPP, "Disconnect Desktop At EOD", 656 - 1, 5);
		createCharacterField(WFDDAE, "Due Diligence WLC in RIM", 661 - 1, 1);
		createCharacterField(TIDPA, "TI Deals Required in Profitability", 662 - 1, 1);
		createCharacterField(DUM8, "DUM8", 663 - 1, 10);
		createZonedField(MCHRP, "Maker-checker history retention period", 673 - 1, 3, 0);
		createCharacterField(MCCHK, "Maker-checker default checker", 667 - 1, 10);

		// final setup
		initialDefaultValue();
	}

}