package com.misys.equation.function.beans;

import com.misys.equation.function.runtime.FunctionMessage;
import com.misys.equation.function.runtime.FunctionMessages;

/**
 * This class represents the run time data of a field.
 * <p>
 * This is used for repeating data to separate the field definition information (held once) from the repeating data values.
 */
public class FieldValues
{
	// This attribute is used to store cvs version information.
	public static final String _revision = "$Id: FieldValues.java 7610 2010-06-01 17:10:41Z MACDONP1 $";

	// constant
	public static final int ORIENT_NOT_SET = 0;
	public static final int ORIENT_RTL = 1;
	public static final int ORIENT_LTR = 2;

	// field value information
	protected String inputValue;
	protected String outputValue;
	protected String dbValue;

	// message severity and list of messages
	private FunctionMessages functionMessages;

	// properties
	protected boolean locked; // never change any of the value

	// these properties are display specific
	protected int orientation; // right-to-left orientation or left-to-right orientation?
	protected boolean showDescAsValue; // set to true if show description as value

	/**
	 * Construct a default unnamed field data
	 */
	public FieldValues()
	{
		super();
		commonInitialisation();
	}

	/**
	 * Construct a field data based on an existing field values
	 * 
	 * @param fieldValues
	 *            - the source field value
	 */
	public FieldValues(FieldValues fieldValues)
	{
		commonInitialisation();
		copyFieldValues(fieldValues);
	}

	/**
	 * Common initialisation
	 */
	private void commonInitialisation()
	{
		this.inputValue = "";
		this.outputValue = "";
		this.dbValue = "";
		this.locked = false;
		this.orientation = ORIENT_NOT_SET;
		this.showDescAsValue = false;
		this.functionMessages = new FunctionMessages();
	}

	/**
	 * Set the content based on existing field values
	 * 
	 * @param fieldValues
	 *            - the source field value
	 */
	public void copyFieldValues(FieldValues fieldValues)
	{
		this.inputValue = fieldValues.inputValue;
		this.outputValue = fieldValues.outputValue;
		this.dbValue = fieldValues.dbValue;
		this.locked = fieldValues.locked;
		this.orientation = fieldValues.orientation;
		this.showDescAsValue = fieldValues.showDescAsValue;
	}

	/**
	 * Set the field input value
	 * 
	 * @param inputValue
	 *            - field input value
	 */
	public void setInputValue(String inputValue)
	{
		// cannot be changed?
		if (locked)
		{
			return;
		}

		this.inputValue = inputValue;
	}

	/**
	 * Return the field input value
	 * 
	 * @return the field input value
	 */
	public String getInputValue()
	{
		return inputValue;
	}

	/**
	 * Set the field output value
	 * 
	 * @param outputValue
	 *            - field output value
	 */
	public void setOutputValue(String outputValue)
	{
		this.outputValue = outputValue;
	}

	/**
	 * Return the field output value
	 * 
	 * @return the field output value
	 */
	public String getOutputValue()
	{
		return outputValue;
	}

	/**
	 * Set the field DB value
	 * 
	 * @param dbValue
	 *            - field DB value
	 */
	public void setDbValue(String dbValue)
	{
		// cannot be changed?
		if (locked)
		{
			return;
		}

		this.dbValue = dbValue;
	}

	/**
	 * Return the field DB value
	 * 
	 * @return the field DB value
	 */
	public String getDbValue()
	{
		return dbValue;
	}

	/**
	 * Return the String representation
	 * 
	 * @return the String representation
	 */
	@Override
	public String toString()
	{
		StringBuffer buffer = new StringBuffer();
		buffer.append(" Inp=" + inputValue.trim());
		buffer.append(" Db=" + dbValue.trim());
		buffer.append(" Out=" + outputValue.trim());
		return buffer.toString();
	}

	/**
	 * Return the message severity
	 * 
	 * @return the message severity
	 */
	public int getMsgSev()
	{
		return functionMessages.getMsgSev();
	}

	/**
	 * Return the list of messages
	 * 
	 * @return the list of messages
	 */
	public FunctionMessages getFunctionMessages()
	{
		return functionMessages;
	}

	/**
	 * Set the function error
	 * 
	 * @param functionMessages
	 *            - the messages generated by the field
	 */
	public void setFunctionMessages(FunctionMessages functionMessages)
	{
		this.functionMessages = functionMessages;
	}

	/**
	 * Add messages
	 * 
	 * @param message
	 *            - the message
	 */
	public void addMessage(FunctionMessage message)
	{
		functionMessages.addMessage(message);
	}

	/**
	 * Clear messages
	 * 
	 */
	public void clearMessages()
	{
		functionMessages.clearMessages();
	}

	/**
	 * Determine if the field cannot be changed
	 * 
	 * @return true if the field cannot be changed
	 */
	public boolean isLocked()
	{
		return locked;
	}

	/**
	 * Set if the field cannot be changed
	 * 
	 * @param locked
	 *            - true if the field cannot be changed
	 */
	public void setLocked(boolean locked)
	{
		this.locked = locked;
	}

	/**
	 * Return the text orientation
	 * 
	 * @return the text orientation
	 */
	public int getOrientation()
	{
		return orientation;
	}

	/**
	 * Set the text orientation
	 * 
	 * @param orientation
	 *            - the text orientation
	 */
	public void setOrientation(int orientation)
	{
		this.orientation = orientation;
	}

	/**
	 * Determine if data is supposed to be displayed as RTL
	 * 
	 * @return true if data is supposed to be displayed as RTL
	 */
	public boolean chkRTL()
	{
		return (orientation == ORIENT_RTL);
	}

	/**
	 * Determine if value has been set to the description
	 * 
	 * @return true if value has been set to the description
	 */
	public boolean isShowDescAsValue()
	{
		return showDescAsValue;
	}

	/**
	 * Set if value has been set to the description
	 * 
	 * @param showDescAsValue
	 *            - true if value has been set to the description
	 */
	public void setShowDescAsValue(boolean showDescAsValue)
	{
		this.showDescAsValue = showDescAsValue;
	}

}
