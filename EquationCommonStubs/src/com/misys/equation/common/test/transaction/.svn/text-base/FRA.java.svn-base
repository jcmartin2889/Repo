/**
 * Copyright and all other intellectual property rights in this software, in any form, is vested in Misys International Banking
 * Systems Ltd ("Misys") or a related company.
 * 
 * This software may not be copied, amended, compiled, translated, or developed; or sold, leased, hired, rented, or disclosed to any
 * third party without the prior written consent of Misys.
 * 
 * Copyright Misys International Banking Systems Ltd, 1975 and later
 */

package com.misys.equation.common.test.transaction;

import com.misys.equation.common.access.EquationStandardTransaction;
import com.misys.equation.common.test.EquationTestCaseAddOnce;

/**
 * @author weddelc1
 */
public class FRA extends EquationTestCaseAddOnce
{
	// This attribute is used to store cvs version information.
	public static final String _revision = "$Id$";
	String programName = "N42ARR";
	String optionId = "FRA";

	// ------------------------------------------------------------------------ JUNIT's overloaded methods
	/**
	 * Setup
	 */
	@Override
	public void setUp() throws Exception
	{
		super.setUp();
	}

	// ------------------------------------------------------------------------ Helper methods
	/**
	 * Return a transaction
	 * 
	 * @return a transaction
	 * 
	 * @throws Exception
	 */
	@Override
	public EquationStandardTransaction getTransaction() throws Exception
	{
		EquationStandardTransaction transaction = getEquationStandardTransaction(programName + optionId);
		transaction.setWorkStationId(WORKSTATIONID);
		return transaction;
	}

	// ------------------------------------------------------------------------ Field setups
	/**
	 * Setup a non-existing key fields only
	 */
	@Override
	public void setupNonExistKeyFields(EquationStandardTransaction transaction)
	{
		transaction.setFieldValue("GZDLP", "PHF"); // Deal type (3A)
		transaction.setFieldValue("GZDLR", "TEST 12"); // Deal reference (13A)
		transaction.setFieldValue("GZBRNM", "ACC1"); // Branch mnemonic (4A)
		transaction.setFieldValue("GZCUS", "ABRAHA"); // Customer mnemonic (6A)
		transaction.setFieldValue("GZCLC", "ISA"); // Customer location (3A)
	}

	/**
	 * Setup the mandatory fields
	 */
	@Override
	public void setupAddFields(EquationStandardTransaction transaction)
	{
		transaction.setFieldValue("GZCCY", "USD"); // Currency mnemonic (3A)
		transaction.setFieldValue("GZDLA", "100000"); // Deal amount (15P,0)
		transaction.setFieldValue("GZSDT", "0991231"); // Start date (7S,0)
		transaction.setFieldValue("GZMDT", "1000105"); // Maturity date (7S,0)
		transaction.setFieldValue("GZCTRD", "0991230"); // Contract date (7S,0)
		transaction.setFieldValue("GZFDTD", "1000105"); // Maturity date (7S,0)
		transaction.setFieldValue("GZFDDE", "991231"); // Date deal entered (7S,0)
		transaction.setFieldValue("GZSRA", "10.0000000"); // Settlement rate (11P,7)
		transaction.setFieldValue("GZCRA", "10.0000000"); // Contract rate (11P,7)
		transaction.setFieldValue("GZCCYF", "USD"); // Receive settlement currency (3A)
		transaction.setFieldValue("GZCCYM", "USD"); // Pay settlement currency (3A)
		transaction.setFieldValue("GZNSTF", "AB1USD"); // Rec nostro mnemonic (6A)
		transaction.setFieldValue("GZNSTM", "AB1USD "); // Nostro mnemonic (6A)
	}

}
