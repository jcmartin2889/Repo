/**
 * Copyright and all other intellectual property rights in this software, in any form, is vested in Misys International Banking
 * Systems Ltd ("Misys") or a related company.
 * 
 * This software may not be copied, amended, compiled, translated, or developed; or sold, leased, hired, rented, or disclosed to any
 * third party without the prior written consent of Misys.
 * 
 * Copyright Misys International Banking Systems Ltd, 1975 and later
 */

package com.misys.equation.common.test.transaction;

import com.misys.equation.common.access.EquationStandardTransaction;
import com.misys.equation.common.test.EquationTestCaseAddMore;

/**
 * Equation test cases for Add WLC Notes function Note that it is not possible to include this in AllTests because the GZID1 & GZID2
 * key fields and GZSTS cannot be known in advance.
 */
public class EWT extends EquationTestCaseAddMore
{
	// This attribute is used to store cvs version information.
	public static final String _revision = "$Id$";
	String programName = "W05ARR";
	String optionId = "EWT";

	// ------------------------------------------------------------------------ JUNIT's overloaded methods
	/**
	 * Setup
	 */
	@Override
	public void setUp() throws Exception
	{
		super.setUp();
	}

	// ------------------------------------------------------------------------ Helper methods
	/**
	 * Return a transaction
	 * 
	 * @return a transaction
	 * 
	 * @throws Exception
	 */
	@Override
	public EquationStandardTransaction getTransaction() throws Exception
	{
		EquationStandardTransaction transaction = getEquationStandardTransaction(programName + optionId);
		transaction.setWorkStationId(WORKSTATIONID);
		return transaction;
	}

	// ------------------------------------------------------------------------ Field setups

	/**
	 * Setup a non-existing key fields only
	 */
	@Override
	public void setupNonExistKeyFields(EquationStandardTransaction transaction)
	{
		transaction.setFieldValue("GZID1", "LOND"); // Branch check ID (4A)
		transaction.setFieldValue("GZID2", "000105000001113"); // Check ID (15A)
		transaction.setFieldValue("GZSUB", "0"); // Sub-case number (3P,0)
	}

	/**
	 * Setup an existing key fields
	 */
	@Override
	public void setupExistKeyFields(EquationStandardTransaction transaction)
	{
		transaction.setFieldValue("GZID1", "CORP"); // Branch check ID (4A)
		transaction.setFieldValue("GZID2", "000105000000017"); // Check ID (15A)
		transaction.setFieldValue("GZSUB", "0"); // Sub-case number (3P,0)
	}

	/**
	 * Setup the mandatory fields
	 */
	@Override
	public void setupAddFields(EquationStandardTransaction transaction)
	{
		transaction.setFieldValue("GZSTS", "40"); // Case status (current)
		transaction.setFieldValue("GZN01", "Notes line 1 test"); // Narrative line 1 (75A)
		transaction.setFieldValue("GZN02", "Notes line 2 test"); // Narrative line 2 (75A)
	}

}
