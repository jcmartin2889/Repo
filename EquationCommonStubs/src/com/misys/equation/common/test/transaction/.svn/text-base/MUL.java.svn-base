/**
 * Copyright and all other intellectual property rights in this software, in any form, is vested in Misys International Banking
 * Systems Ltd ("Misys") or a related company.
 * 
 * This software may not be copied, amended, compiled, translated, or developed; or sold, leased, hired, rented, or disclosed to any
 * third party without the prior written consent of Misys.
 * 
 * Copyright Misys International Banking Systems Ltd, 1975 and later
 */

package com.misys.equation.common.test.transaction;

import com.misys.equation.common.access.EquationStandardTransaction;
import com.misys.equation.common.test.EquationTestCaseFully;

/**
 * Equation test cases for Maintain User Limits
 */
public class MUL extends EquationTestCaseFully
{
	// This attribute is used to store cvs version information.
	public static final String _revision = "$Id$";
	String programName = "A09FRR";
	String optionId = "MUL";

	// ------------------------------------------------------------------------ JUNIT's overloaded methods
	/**
	 * Setup
	 */
	@Override
	public void setUp() throws Exception
	{
		super.setUp();
		retrieveBeforeCancel = false;
	}

	// ------------------------------------------------------------------------ Helper methods
	/**
	 * Return a transaction
	 * 
	 * @return a transaction
	 * 
	 * @throws Exception
	 */
	@Override
	public EquationStandardTransaction getTransaction() throws Exception
	{
		EquationStandardTransaction transaction = getEquationStandardTransaction(programName + optionId);
		transaction.setWorkStationId(WORKSTATIONID);
		return transaction;
	}

	// ------------------------------------------------------------------------ Field setups

	/**
	 * Setup a non-existing key fields only
	 */
	@Override
	public void setupNonExistKeyFields(EquationStandardTransaction transaction)
	{
		transaction.setFieldValue("GZUID", "ARCH"); // User identifier (4A)
		transaction.setFieldValue("GZBBN", "0543"); // Branch number (4A)
	}

	/**
	 * Setup the mandatory fields (add mode)
	 */
	@Override
	public void setupAddFields(EquationStandardTransaction transaction)
	{
		transaction.setFieldValue("GZGRP", "SUPER"); // Group name (6A)
		transaction.setFieldValue("GZPIBT", "N"); // Process interbranch trans. (1A)
		transaction.setFieldValue("GZDRA", "10000"); // Local debit amount limit (15P,0)
		transaction.setFieldValue("GZCRA", "10000"); // Local credit amount limit (15P,0)
		transaction.setFieldValue("GZIBDR", "10000"); // Local i/br dr amount limit (15P,0)
		transaction.setFieldValue("GZIBCR", "10000"); // Local i/br cr amount limit (15P,0)
		transaction.setFieldValue("GZDRAA", "10000"); // Dr amt authorisation limit (15P,0)
		transaction.setFieldValue("GZCRAA", "10000"); // Cr amt authorisation limit (15P,0)
	}

	/**
	 * Setup the mandatory fields (maintain mode)
	 */
	@Override
	public void setupMaintFields(EquationStandardTransaction transaction)
	{

		transaction.setFieldValue("GZCRAA", "20000"); // Cr amt authorisation limit (15P,0)

	}

}
